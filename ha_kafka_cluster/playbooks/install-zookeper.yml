---
- name: Install and configure Zookeeper
  hosts: zookeeper
  become: true
  gather_facts: true

  vars:
    zookeeper_download_link: https://dlcdn.apache.org/zookeeper/zookeeper-3.8.4/apache-zookeeper-3.8.4-bin.tar.gz
    zookeeper_download_checksum: 4d85d6f7644d5f36d9c4d65e78bd662ab35ebe1380d762c24c12b98af029027eee453437c9245dbdf2b9beb77cd6b690b69e26f91cf9d11b0a183a979c73fa43
    download_dir: /tmp/zookeeper
    zookeeper_home: /opt/zookeeper
    zookeeper_data_dir: /var/lib/zookeeper/data
    zookeeper_log_dir: /var/lib/zookeeper/logs
    zookeeper_conf_file: /opt/zookeeper/conf/zoo.conf
    zookeeper_zkEnv_file: "{{zookeeper_home}}/bin/zkEnv.sh"
    systemd_dir: "/etc/systemd/system/"

  tasks:
    - name: Create installation directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ download_dir }}"
        - "{{ zookeeper_home }}"
        - "{{ zookeeper_data_dir }}"
        - "{{ zookeeper_log_dir }}"
    
    - name: Download Zookeeper
      ansible.builtin.get_url:
        url: "{{ zookeeper_download_link}}"
        dest: "{{ download_dir }}/apache-zookeeper-3.8.4-bin.tar.gz"
      register: zookeeper_download
    
    - name: Stat file for checksum
      ansible.builtin.stat:
        path: "{{ zookeeper_download.dest }}"
        checksum_algorithm: sha512
      register: stat
    
    - name: Check download integrity
      ansible.builtin.fail:
        msg: "Checksum failed {{stat.stat['checksum']}}"
      when: stat.stat["checksum"] != zookeeper_download_checksum

    - name: Unarchive Zookeeper
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ zookeeper_download.dest }}"
        dest: "{{ zookeeper_home }}"
        extra_opts:
        - "--strip-components=1"

    - name: Define server id
      template:
        src: zookeeper/myid.j2
        dest: "{{ zookeeper_data_dir }}/myid"
        mode: '0644'

    - name: Create ensembly hostvars list
      run_once: true
      ansible.builtin.set_fact:
        ensemble_hostvars_list: "{{groups['zookeeper']|map('extract', hostvars)|list}}"

    - name: Configure environment
      ansible.builtin.blockinfile:
        path: "{{zookeeper_zkEnv_file}}"
        append_newline: true
        prepend_newline: true
        block: |
          export ZOO_LOG_DIR={{zookeeper_log_dir}}
        state: present

    - name: Copy Zookeeper configuration
      template:
        src: zookeeper/zoo.conf.j2
        dest: "{{ zookeeper_conf_file }}"
        mode: '0644'

    - name: Configure systemd Service
      template:
        src: zookeeper/zookeeper.service.j2
        dest: "{{ systemd_dir }}/zookeeper.service"
        mode: '0644'

    - name: Enable and start Zookeeper service
      ansible.builtin.systemd_service:
        daemon_reload: true # Required ensure config changes are applied.
        name: zookeeper.service
        state: started
        enabled: true
      
...
